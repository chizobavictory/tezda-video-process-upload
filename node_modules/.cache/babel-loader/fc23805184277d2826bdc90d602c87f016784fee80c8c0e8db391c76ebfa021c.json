{"ast":null,"code":"var _jsxFileName = \"/Users/echelon/Documents/GitHub/tezda/tezda-video-process-upload/src/components/Transactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FileBase64 from \"react-file-base64\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [videoData, setVideoData] = useState(null);\n  const [uploadResponse, setUploadResponse] = useState(null);\n  const [detailsResponse, setDetailsResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const videoRef = useRef(null);\n  const handleUserIdChange = event => {\n    setUserId(event.target.value);\n  };\n  const handleVideoUpload = file => {\n    setVideoData(file.base64);\n  };\n  const handleUpload = async () => {\n    if (!userId || !videoData) {\n      toast.error(\"Please enter user ID and select a video\");\n      return;\n    }\n    const presignedUrlEndpoint = `https://kl8no40qhb.execute-api.eu-west-2.amazonaws.com/test/user/createUserUploadPresignedUrl?user_id=${userId}`;\n    try {\n      setLoading(true);\n\n      // Step 1: Request a presigned URL\n      const presignedUrlResponse = await axios.post(presignedUrlEndpoint);\n      console.log(\"Response from presigned URL request:\", presignedUrlResponse);\n      const presignedUrl = presignedUrlResponse.data.data;\n      function getItemIdFromPresignedUrl(presignedUrl) {\n        try {\n          // Extract the path from the URL\n          const url = new URL(presignedUrl);\n          const path = url.pathname;\n\n          // Split the path by '/' and get the last part (which is the item ID)\n          const pathParts = path.split('/');\n          const itemId = pathParts[pathParts.length - 1];\n          return itemId;\n        } catch (error) {\n          console.error('Error extracting item ID from presigned URL:', error);\n          return null;\n        }\n      }\n\n      // Step 2: Upload the video to S3 using the presigned URL\n      console.log(\"Uploading video data:\", videoData.split(\",\")[1]);\n      await axios.put(presignedUrl, videoData.split(\",\")[1], {\n        headers: {\n          \"Content-Type\": \"video/mp4\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n      const item_id = presignedUrlResponse.data.data.item_id;\n\n      // Step 3: After successful upload, you can now trigger other actions or display a success message.\n      setUploadResponse({\n        message: \"Video uploaded successfully\",\n        data: {\n          presignedUrl\n        }\n      });\n      toast.success(\"Video uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error during upload:\", error);\n      if (error.response) {\n        toast.error(`Error during upload: ${error.response.data.message}`);\n      } else {\n        toast.error(\"Unexpected error uploading video. Please try again later.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGetDetails = async () => {\n    if (!uploadResponse) {\n      toast.error(\"Please upload a video first\");\n      return;\n    }\n    try {\n      setLoading(true);\n      // Hit the details endpoint once\n      const detailsEndpoint = `https://kl8no40qhb.execute-api.eu-west-2.amazonaws.com/dev/user/findUserShortVideo?item_id=${uploadResponse.data.item_id}`;\n      const detailsResponse = await axios.get(detailsEndpoint);\n      setDetailsResponse(detailsResponse.data);\n\n      // Auto-load the uploaded video into the video player\n      if (videoRef.current) {\n        // Assuming the video URL is correctly returned from the API\n        const videoUrl = detailsResponse.data.data.videoS3Url;\n        videoRef.current.src = videoUrl;\n        videoRef.current.load();\n        videoRef.current.play(); // Auto-play the video if needed\n      }\n    } catch (error) {\n      console.error(\"Error getting video details:\", error);\n      toast.error(\"Error getting video details. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col md:pt-15 pt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row justify-between gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-neutral-900 flex flex-col gap-4 md:flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-[degularbold] md:text-2xl text-xl\",\n            children: \"Upload Video Logic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-[degularmedium] text-gray-600\",\n            children: [\"Your video is uploaded when you select a video and click upload video. After it is done uploading a button appears allowing you to get a video details.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), \"This video details is the result of the background Lambda functions that are triggered when a video is uploaded. It gives the video labels based on the uploaded video (AWS rekognition and redshift) and the adaptive bitrates of the video (FFMPEG)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"bg-gray-100 text-neutral-900 p-4 items-center flex gap-2 rounded-full font-[degularsemibold] h-12\",\n            onChange: handleUserIdChange,\n            placeholder: \"Enter User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 md:w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-[degularsemibold] text-xl\",\n            children: \"Select Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:border-blue-500\",\n            children: /*#__PURE__*/_jsxDEV(FileBase64, {\n              multiple: false,\n              onDone: handleVideoUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          className: \"w-full bg-blue-500 text-white p-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-500\",\n          children: \"Upload Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetDetails,\n          className: \"w-full bg-green-500 text-white p-2 rounded-md mt-4 hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-500\",\n          children: \"Get Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full border-t mt-4 border-gray-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), uploadResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Upload Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-100 overflow-auto p-4 text-sm rounded-md\",\n        children: JSON.stringify(uploadResponse, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), detailsResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Full Video Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-100 overflow-auto p-4 text-sm rounded-md\",\n        children: JSON.stringify(detailsResponse, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Uploaded Video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        controls: true,\n        width: \"100%\",\n        height: \"auto\",\n        children: \"Your browser does not support the video tag.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"G/FbLErM10itJwZ3E8FTZeGBNqg=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useRef","axios","toast","ToastContainer","FileBase64","jsxDEV","_jsxDEV","Transactions","_s","userId","setUserId","videoData","setVideoData","uploadResponse","setUploadResponse","detailsResponse","setDetailsResponse","loading","setLoading","videoRef","handleUserIdChange","event","target","value","handleVideoUpload","file","base64","handleUpload","error","presignedUrlEndpoint","presignedUrlResponse","post","console","log","presignedUrl","data","getItemIdFromPresignedUrl","url","URL","path","pathname","pathParts","split","itemId","length","put","headers","item_id","message","success","response","handleGetDetails","detailsEndpoint","get","current","videoUrl","videoS3Url","src","load","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","multiple","onDone","onClick","JSON","stringify","ref","controls","width","height","_c","$RefreshReg$"],"sources":["/Users/echelon/Documents/GitHub/tezda/tezda-video-process-upload/src/components/Transactions.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FileBase64 from \"react-file-base64\";\n\n\n\nconst Transactions = () => {\n  const [userId, setUserId] = useState<string>(\"\");\n  const [videoData, setVideoData] = useState<string | null>(null);\n  const [uploadResponse, setUploadResponse] = useState<any | null>(null);\n  const [detailsResponse, setDetailsResponse] = useState<any | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserId(event.target.value);\n  };\n\n  const handleVideoUpload = (file: { base64: string }) => {\n    setVideoData(file.base64);\n  };\n\n \n  const handleUpload = async () => {\n    if (!userId || !videoData) {\n      toast.error(\"Please enter user ID and select a video\");\n      return;\n    }\n\n    const presignedUrlEndpoint = `https://kl8no40qhb.execute-api.eu-west-2.amazonaws.com/test/user/createUserUploadPresignedUrl?user_id=${userId}`;\n\n    try {\n      setLoading(true);\n\n      // Step 1: Request a presigned URL\n      const presignedUrlResponse = await axios.post(presignedUrlEndpoint);\n      console.log(\"Response from presigned URL request:\", presignedUrlResponse);\n      const presignedUrl = presignedUrlResponse.data.data;\n\nfunction getItemIdFromPresignedUrl(presignedUrl) {\n  try {\n    // Extract the path from the URL\n    const url = new URL(presignedUrl);\n    const path = url.pathname;\n\n    // Split the path by '/' and get the last part (which is the item ID)\n    const pathParts = path.split('/');\n    const itemId = pathParts[pathParts.length - 1];\n\n    return itemId;\n  } catch (error) {\n    console.error('Error extracting item ID from presigned URL:', error);\n    return null;\n  }\n}\n\n\n      // Step 2: Upload the video to S3 using the presigned URL\n      console.log(\"Uploading video data:\", videoData.split(\",\")[1]);\n      await axios.put(presignedUrl, videoData.split(\",\")[1], {\n        headers: {\n          \"Content-Type\": \"video/mp4\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      });\n\n      const item_id = presignedUrlResponse.data.data.item_id;\n\n      // Step 3: After successful upload, you can now trigger other actions or display a success message.\n      setUploadResponse({ message: \"Video uploaded successfully\", data: { presignedUrl } });\n      toast.success(\"Video uploaded successfully!\");\n    } catch (error: any) {\n      console.error(\"Error during upload:\", error);\n\n      if (error.response) {\n        toast.error(`Error during upload: ${error.response.data.message}`);\n      } else {\n        toast.error(\"Unexpected error uploading video. Please try again later.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGetDetails = async () => {\n    if (!uploadResponse) {\n      toast.error(\"Please upload a video first\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      // Hit the details endpoint once\n      const detailsEndpoint = `https://kl8no40qhb.execute-api.eu-west-2.amazonaws.com/dev/user/findUserShortVideo?item_id=${uploadResponse.data.item_id}`;\n      const detailsResponse = await axios.get(detailsEndpoint);\n      setDetailsResponse(detailsResponse.data);\n\n      // Auto-load the uploaded video into the video player\n      if (videoRef.current) {\n        // Assuming the video URL is correctly returned from the API\n        const videoUrl = detailsResponse.data.data.videoS3Url;\n        videoRef.current.src = videoUrl;\n        videoRef.current.load();\n        videoRef.current.play(); // Auto-play the video if needed\n      }\n    } catch (error: any) {\n      console.error(\"Error getting video details:\", error);\n      toast.error(\"Error getting video details. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className='flex flex-col md:pt-15 pt-5'>\n      <div className='flex flex-col md:flex-row justify-between gap-4'>\n        <div className='text-neutral-900 flex flex-col gap-4 md:flex'>\n          <div>\n            <p className='font-[degularbold] md:text-2xl text-xl'>Upload Video Logic</p>\n            <p className='font-[degularmedium] text-gray-600'>\n              Your video is uploaded when you select a video and click upload video. After it is done uploading a button appears allowing you to get a\n              video details.\n              <br />\n              This video details is the result of the background Lambda functions that are triggered when a video is uploaded. It gives the video\n              labels based on the uploaded video (AWS rekognition and redshift) and the adaptive bitrates of the video (FFMPEG)\n            </p>\n          </div>\n          <div>\n            <input\n              className='bg-gray-100 text-neutral-900 p-4 items-center flex gap-2 rounded-full font-[degularsemibold] h-12'\n              onChange={handleUserIdChange}\n              placeholder='Enter User ID'\n            />\n          </div>\n        </div>\n        <div className='flex flex-col gap-2 md:w-1/2'>\n          <div className='mt-4'>\n            <p className='font-[degularsemibold] text-xl'>Select Video</p>\n            <div className='w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:border-blue-500'>\n              <FileBase64 multiple={false} onDone={handleVideoUpload} />\n            </div>\n          </div>\n          <button\n            onClick={handleUpload}\n            className='w-full bg-blue-500 text-white p-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-500'\n          >\n            Upload Video\n          </button>\n          <button\n            onClick={handleGetDetails}\n            className='w-full bg-green-500 text-white p-2 rounded-md mt-4 hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-500'\n          >\n            Get Details\n          </button>\n        </div>\n      </div>\n      <div className='w-full border-t mt-4 border-gray-300' />\n\n      {loading && (\n        <div className='mt-4 flex justify-center'>\n          <p className='text-lg font-bold mb-2'>Loading...</p>\n        </div>\n      )}\n\n      {uploadResponse && (\n        <div className='mt-4 '>\n          <h2 className='text-lg font-bold mb-2'>Upload Response:</h2>\n          <div>{/* Add any additional elements or styling here if needed */}</div>\n          <pre className='bg-gray-100 overflow-auto p-4 text-sm rounded-md'>{JSON.stringify(uploadResponse, null, 2)}</pre>\n        </div>\n      )}\n\n      {detailsResponse && (\n        <div className='mt-4 '>\n          <h2 className='text-lg font-bold mb-2'>Full Video Details:</h2>\n          <div>{/* Add any additional elements or styling here if needed */}</div>\n          <pre className='bg-gray-100 overflow-auto p-4 text-sm rounded-md'>{JSON.stringify(detailsResponse, null, 2)}</pre>\n        </div>\n      )}\n\n      {/* Video player section */}\n      <div className='mt-4'>\n        <h2 className='text-lg font-bold mb-2'>Uploaded Video:</h2>\n        <video ref={videoRef} controls width='100%' height='auto'>\n          Your browser does not support the video tag.\n        </video>\n      </div>\n\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}