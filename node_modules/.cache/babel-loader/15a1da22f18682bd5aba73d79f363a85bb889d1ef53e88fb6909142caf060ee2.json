{"ast":null,"code":"var _s = $RefreshSig$();\n// useTransactionData.ts\n\nimport { useState, useEffect } from 'react';\nconst useTransactionData = () => {\n  _s();\n  const [transactionData, setTransactionData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://fe-task-api.mainstack.io/transactions');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Transaction data:', data);\n        setTransactionData(data);\n      } catch (error) {\n        console.error('Error fetching transaction data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return transactionData;\n};\n_s(useTransactionData, \"/CD+2JDv0P4Cfl5qB42KuZrtsn4=\");\nexport default useTransactionData;","map":{"version":3,"names":["useState","useEffect","useTransactionData","_s","transactionData","setTransactionData","fetchData","response","fetch","ok","Error","data","json","console","log","error"],"sources":["/Users/echelon/Documents/GitHub/mainstack-fe-task/src/hooks/transactions.ts"],"sourcesContent":["// useTransactionData.ts\n\nimport { useState, useEffect } from 'react';\n\ninterface TransactionData {\n  amount: number;\n  metadata: {\n    name?: string;\n    type: string;\n    email: string;\n    quantity?: number;\n    country: string;\n    product_name?: string;\n  };\n  payment_reference?: string;\n  status: string;\n  type: string;\n  date: string;\n}\n\nconst useTransactionData = () => {\n  const [transactionData, setTransactionData] = useState<TransactionData[] | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://fe-task-api.mainstack.io/transactions');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Transaction data:', data);\n        setTransactionData(data);\n      } catch (error) {\n        console.error('Error fetching transaction data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return transactionData;\n};\n\nexport default useTransactionData;\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAkB3C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAA2B,IAAI,CAAC;EAEtFC,SAAS,CAAC,MAAM;IACd,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC;QAC7E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;QACtCN,kBAAkB,CAACM,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,eAAe;AACxB,CAAC;AAACD,EAAA,CAtBID,kBAAkB;AAwBxB,eAAeA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}