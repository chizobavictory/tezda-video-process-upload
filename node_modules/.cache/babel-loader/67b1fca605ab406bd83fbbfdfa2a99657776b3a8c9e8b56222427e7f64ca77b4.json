{"ast":null,"code":"var _jsxFileName = \"/Users/echelon/Documents/GitHub/tezda/tezda-video-process-upload/src/components/Transactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport useTransactionData from \"../hooks/transactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const [isFilterModalOpen, setFilterModalOpen] = useState(false);\n  const [uploadResponse, setUploadResponse] = useState(null); // Added state for upload response\n\n  const openFilterModal = () => {\n    setFilterModalOpen(true);\n  };\n  const closeFilterModal = () => {\n    setFilterModalOpen(false);\n  };\n  const handleVideoUpload = async () => {\n    // Implement video upload logic here\n    try {\n      // Make API call for video upload\n      // Set upload response in state\n      // Example:\n      setUploadResponse({\n        message: \"Video uploaded successfully!\",\n        data: {\n          // Video details here\n        }\n      });\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n      // Handle error\n      // Optionally, set error details in state for display\n    }\n  };\n\n  const transactionData = useTransactionData();\n  const totalTransactions = transactionData ? transactionData.length : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col pt-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-gray-100 text-neutral-900 p-4 items-center flex gap-2 rounded-full font-[degularsemibold] h-12\",\n          onClick: handleVideoUpload // Attach video upload function to the button\n          ,\n          children: \"Upload Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), uploadResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Upload Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-100 p-2 rounded-md\",\n        children: JSON.stringify(uploadResponse, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"WCxWhHRJtUBYT/CpQG1nYFNytJ0=\", false, function () {\n  return [useTransactionData];\n});\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useTransactionData","jsxDEV","_jsxDEV","Transactions","_s","isFilterModalOpen","setFilterModalOpen","uploadResponse","setUploadResponse","openFilterModal","closeFilterModal","handleVideoUpload","message","data","error","console","transactionData","totalTransactions","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/echelon/Documents/GitHub/tezda/tezda-video-process-upload/src/components/Transactions.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport expand from \"../assets/expand_more.svg\";\nimport download from \"../assets/download.svg\";\nimport TransactionsList from \"./TransactionsList\";\nimport FilterModal from \"./Modal\";\nimport useTransactionData from \"../hooks/transactions\";\n\nconst Transactions = () => {\n  const [isFilterModalOpen, setFilterModalOpen] = useState(false);\n  const [uploadResponse, setUploadResponse] = useState<any | null>(null); // Added state for upload response\n\n  const openFilterModal = () => {\n    setFilterModalOpen(true);\n  };\n\n  const closeFilterModal = () => {\n    setFilterModalOpen(false);\n  };\n\n  const handleVideoUpload = async () => {\n    // Implement video upload logic here\n    try {\n      // Make API call for video upload\n      // Set upload response in state\n      // Example:\n      setUploadResponse({\n        message: \"Video uploaded successfully!\",\n        data: {\n          // Video details here\n        },\n      });\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n      // Handle error\n      // Optionally, set error details in state for display\n    }\n  };\n\n  const transactionData = useTransactionData();\n  const totalTransactions = transactionData ? transactionData.length : 0;\n\n  return (\n    <div className=\"flex flex-col pt-20\">\n      <div className=\"flex justify-between\">\n        {/* ... (existing code) */}\n        <div className=\"flex gap-2\">\n          {/* ... (existing code) */}\n          <button\n            className=\"bg-gray-100 text-neutral-900 p-4 items-center flex gap-2 rounded-full font-[degularsemibold] h-12\"\n            onClick={handleVideoUpload} // Attach video upload function to the button\n          >\n            Upload Video\n            {/* You can add an icon here if needed */}\n          </button>\n        </div>\n      </div>\n      {/* ... (existing code) */}\n      {/* Display upload response details */}\n      {uploadResponse && (\n        <div className=\"mt-4\">\n          <h2 className=\"text-lg font-bold mb-2\">Upload Response:</h2>\n          <pre className=\"bg-gray-100 p-2 rounded-md\">{JSON.stringify(uploadResponse, null, 2)}</pre>\n        </div>\n      )}\n      {/* ... (existing code) */}\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAKvC,OAAOC,kBAAkB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,iBAAiB,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAa,IAAI,CAAC,CAAC,CAAC;;EAExE,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5BH,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7BJ,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC;IACA,IAAI;MACF;MACA;MACA;MACAH,iBAAiB,CAAC;QAChBI,OAAO,EAAE,8BAA8B;QACvCC,IAAI,EAAE;UACJ;QAAA;MAEJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C;MACA;IACF;EACF,CAAC;;EAED,MAAME,eAAe,GAAGhB,kBAAkB,CAAC,CAAC;EAC5C,MAAMiB,iBAAiB,GAAGD,eAAe,GAAGA,eAAe,CAACE,MAAM,GAAG,CAAC;EAEtE,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClClB,OAAA;MAAKiB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eAEnClB,OAAA;QAAKiB,SAAS,EAAC,YAAY;QAAAC,QAAA,eAEzBlB,OAAA;UACEiB,SAAS,EAAC,mGAAmG;UAC7GE,OAAO,EAAEV,iBAAkB,CAAC;UAAA;UAAAS,QAAA,EAC7B;QAEC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLlB,cAAc,iBACbL,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBlB,OAAA;QAAIiB,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5DvB,OAAA;QAAKiB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAEM,IAAI,CAACC,SAAS,CAACpB,cAAc,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5DID,YAAY;EAAA,QA+BQH,kBAAkB;AAAA;AAAA4B,EAAA,GA/BtCzB,YAAY;AA8DlB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}