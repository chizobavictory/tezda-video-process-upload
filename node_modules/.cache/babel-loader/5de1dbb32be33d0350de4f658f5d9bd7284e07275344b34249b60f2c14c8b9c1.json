{"ast":null,"code":"var _jsxFileName = \"/Users/echelon/Documents/GitHub/tezda/tezda-video-streaming/src/components/Transactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Hls from 'hls.js';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [videoUrl, setVideoUrl] = useState('');\n  const [cookie, setCookie] = useState('');\n  const videoRef = useRef(null);\n  const handleUrlChange = event => {\n    setVideoUrl(event.target.value);\n  };\n  const handleCookieChange = event => {\n    setCookie(event.target.value);\n  };\n  useEffect(() => {\n    const loadVideo = () => {\n      var _videoRef$current2;\n      if (Hls.isSupported() && videoRef.current) {\n        const hls = new Hls();\n        hls.loadSource(videoUrl);\n        hls.attachMedia(videoRef.current);\n        hls.on(Hls.Events.MANIFEST_PARSED, () => {\n          var _videoRef$current;\n          (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.play().catch(error => {\n            toast.error(`Error playing video: ${error.message}`);\n          });\n        });\n      } else if ((_videoRef$current2 = videoRef.current) !== null && _videoRef$current2 !== void 0 && _videoRef$current2.canPlayType('application/vnd.apple.mpegurl')) {\n        videoRef.current.src = videoUrl;\n        videoRef.current.addEventListener('loadedmetadata', () => {\n          var _videoRef$current3;\n          (_videoRef$current3 = videoRef.current) === null || _videoRef$current3 === void 0 ? void 0 : _videoRef$current3.play().catch(error => {\n            toast.error(`Error playing video: ${error.message}`);\n          });\n        });\n      }\n    };\n    if (videoUrl) {\n      if (cookie) {\n        axios.get(videoUrl, {\n          headers: {\n            Cookie: cookie\n          }\n        }).then(loadVideo).catch(error => {\n          toast.error(`Error loading video with cookie: ${error.message}`);\n        });\n      } else {\n        loadVideo();\n      }\n    }\n  }, [videoUrl, cookie]);\n  const handlePlay = () => {\n    if (!videoUrl) {\n      toast.error('Please enter a video URL');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"videoUrl\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Video URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"videoUrl\",\n        value: videoUrl,\n        onChange: handleUrlChange,\n        placeholder: \"Enter video URL\",\n        className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cookie\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Cookie (optional):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cookie\",\n        value: cookie,\n        onChange: handleCookieChange,\n        placeholder: \"Enter cookie\",\n        className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlay,\n      className: \"mb-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n      children: \"Play Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        controls: true,\n        width: \"100%\",\n        className: \"rounded-md shadow-md\",\n        children: \"Your browser does not support the video tag.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"kKXdrrkJqEbZR/5xI6r/1SEApKs=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Hls","axios","toast","ToastContainer","jsxDEV","_jsxDEV","VideoPlayer","_s","videoUrl","setVideoUrl","cookie","setCookie","videoRef","handleUrlChange","event","target","value","handleCookieChange","loadVideo","_videoRef$current2","isSupported","current","hls","loadSource","attachMedia","on","Events","MANIFEST_PARSED","_videoRef$current","play","catch","error","message","canPlayType","src","addEventListener","_videoRef$current3","get","headers","Cookie","then","handlePlay","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","onClick","ref","controls","width","_c","$RefreshReg$"],"sources":["/Users/echelon/Documents/GitHub/tezda/tezda-video-streaming/src/components/Transactions.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Hls from 'hls.js';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst VideoPlayer: React.FC = () => {\n  const [videoUrl, setVideoUrl] = useState<string>('');\n  const [cookie, setCookie] = useState<string>('');\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const handleUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setVideoUrl(event.target.value);\n  };\n\n  const handleCookieChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCookie(event.target.value);\n  };\n\n  useEffect(() => {\n    const loadVideo = () => {\n      if (Hls.isSupported() && videoRef.current) {\n        const hls = new Hls();\n        hls.loadSource(videoUrl);\n        hls.attachMedia(videoRef.current);\n        hls.on(Hls.Events.MANIFEST_PARSED, () => {\n          videoRef.current?.play().catch((error) => {\n            toast.error(`Error playing video: ${error.message}`);\n          });\n        });\n      } else if (videoRef.current?.canPlayType('application/vnd.apple.mpegurl')) {\n        videoRef.current.src = videoUrl;\n        videoRef.current.addEventListener('loadedmetadata', () => {\n          videoRef.current?.play().catch((error) => {\n            toast.error(`Error playing video: ${error.message}`);\n          });\n        });\n      }\n    };\n\n    if (videoUrl) {\n      if (cookie) {\n        axios\n          .get(videoUrl, {\n            headers: {\n              Cookie: cookie,\n            },\n          })\n          .then(loadVideo)\n          .catch((error) => {\n            toast.error(`Error loading video with cookie: ${error.message}`);\n          });\n      } else {\n        loadVideo();\n      }\n    }\n  }, [videoUrl, cookie]);\n\n  const handlePlay = () => {\n    if (!videoUrl) {\n      toast.error('Please enter a video URL');\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center p-4\">\n      <div className=\"w-full max-w-md mb-4\">\n        <label htmlFor=\"videoUrl\" className=\"block text-sm font-medium text-gray-700\">\n          Video URL:\n        </label>\n        <input\n          type=\"text\"\n          id=\"videoUrl\"\n          value={videoUrl}\n          onChange={handleUrlChange}\n          placeholder=\"Enter video URL\"\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n        />\n      </div>\n      <div className=\"w-full max-w-md mb-4\">\n        <label htmlFor=\"cookie\" className=\"block text-sm font-medium text-gray-700\">\n          Cookie (optional):\n        </label>\n        <input\n          type=\"text\"\n          id=\"cookie\"\n          value={cookie}\n          onChange={handleCookieChange}\n          placeholder=\"Enter cookie\"\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n        />\n      </div>\n      <button\n        onClick={handlePlay}\n        className=\"mb-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n      >\n        Play Video\n      </button>\n      <div className=\"w-full max-w-2xl\">\n        <video ref={videoRef} controls width=\"100%\" className=\"rounded-md shadow-md\">\n          Your browser does not support the video tag.\n        </video>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}