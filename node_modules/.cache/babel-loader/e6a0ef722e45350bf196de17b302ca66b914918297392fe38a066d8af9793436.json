{"ast":null,"code":"var _jsxFileName = \"/Users/echelon/Documents/GitHub/tezda/tezda-video-process-upload/src/components/Transactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FileBase64 from \"react-file-base64\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [videoData, setVideoData] = useState(null);\n  const [uploadResponse, setUploadResponse] = useState(null);\n  const [detailsResponse, setDetailsResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const videoRef = useRef(null);\n  const handleUserIdChange = event => {\n    setUserId(event.target.value);\n  };\n  const getItemIdFromPresignedUrl = presignedUrl => {\n    try {\n      const url = new URL(presignedUrl);\n      const path = url.pathname;\n      const pathParts = path.split('/');\n      const fileName = pathParts[pathParts.length - 1];\n      // Remove the file extension, assuming it's always \".mp4\"\n      const itemId = fileName.replace(/\\.mp4$/, '');\n      return itemId;\n    } catch (error) {\n      console.error('Error extracting item ID from presigned URL:', error);\n      return null;\n    }\n  };\n  const handleVideoUpload = file => {\n    setVideoData(file.file);\n  };\n  const handleUpload = async () => {\n    if (!userId || !videoData) {\n      toast.error(\"Please enter user ID and select a video\");\n      return;\n    }\n    const presignedUrlEndpoint = `https://kl8no40qhb.execute-api.eu-west-2.amazonaws.com/test/user/createUserUploadPresignedUrl?user_id=${userId}`;\n    try {\n      setLoading(true);\n\n      // Step 1: Request a presigned URL\n      const presignedUrlResponse = await axios.post(presignedUrlEndpoint);\n      console.log(\"Response from presigned URL request:\", presignedUrlResponse);\n      const presignedUrl = presignedUrlResponse.data.data;\n\n      // Step 2: Upload the video to S3 using the presigned URL\n      console.log(\"Uploading video data:\", videoData);\n      await axios.put(presignedUrl, videoData, {\n        headers: {\n          \"Content-Type\": \"video/mp4\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n      const item_id = getItemIdFromPresignedUrl(presignedUrl);\n\n      // Step 3: After a successful upload, you can now trigger other actions or display a success message.\n      setUploadResponse({\n        message: \"Video uploaded successfully\",\n        data: {\n          presignedUrl,\n          item_id\n        }\n      });\n      toast.success(\"Video uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error during upload:\", error);\n      if (error.response) {\n        toast.error(`Error during upload: ${error.response.data.message}`);\n      } else {\n        toast.error(\"Unexpected error uploading video. Please try again later.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGetDetails = async () => {\n    if (!uploadResponse) {\n      toast.error(\"Please upload a video first\");\n      return;\n    }\n    const expectedAttributes = [\"item_id\", \"parentLabels\", \"creation_timestamp\", \"genre\", \"video_duration\", \"adaptiveBitrateS3Url\", \"adaptiveBitrateS3Url720p\", \"childLabels\", \"adaptiveBitrateS3Url360p\", \"videoS3Url\", \"adaptiveBitrateS3Url540p\", \"compressedVideoS3Url\"];\n    try {\n      setLoading(true);\n\n      // Measure start time\n      const startTime = performance.now();\n\n      // Hit the details endpoint once\n      const detailsEndpoint = `https://kl8no40qhb.execute-api.eu-west-2.amazonaws.com/dev/user/findUserShortVideo?item_id=${uploadResponse.data.item_id}`;\n      const detailsResponse = await axios.get(detailsEndpoint);\n      setDetailsResponse(detailsResponse.data);\n\n      // Measure end time\n      const endTime = performance.now();\n\n      // Check completeness of the response\n      const isResponseComplete = expectedAttributes.every(attr => attr in detailsResponse.data.data);\n      if (isResponseComplete) {\n        // Calculate and log the time taken\n        const timeTaken = endTime - startTime;\n        console.log(`Time taken to receive complete response: ${timeTaken} milliseconds`);\n\n        // Auto-load the uploaded video into the video player\n        if (videoRef.current) {\n          // Assuming the video URL is correctly returned from the API\n          const videoUrl = detailsResponse.data.data.videoS3Url;\n          videoRef.current.src = videoUrl;\n          videoRef.current.load();\n          videoRef.current.play(); // Auto-play the video if needed\n        }\n      } else {\n        console.log(\"Incomplete response. Missing attributes:\", expectedAttributes.filter(attr => !(attr in detailsResponse.data.data)));\n        toast.error(\"Incomplete response. Give it some time.\");\n      }\n    } catch (error) {\n      console.error(\"Error getting video details:\", error);\n      toast.error(\"Error getting video details. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col md:pt-15 pt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row justify-between gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-neutral-900 flex flex-col gap-4 md:flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-[degularbold] md:text-2xl text-xl\",\n            children: \"Upload Video Logic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-[degularmedium] text-gray-600\",\n            children: [\"Your video is uploaded when you select a video and click upload video. After it is done uploading a button appears allowing you to get a video details.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), \"This video details is the result of the background Lambda functions that are triggered when a video is uploaded. It gives the video labels based on the uploaded video (AWS rekognition and redshift) and the adaptive bitrates of the video (FFMPEG)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"bg-gray-100 text-neutral-900 p-4 items-center flex gap-2 rounded-full font-[degularsemibold] h-12\",\n            onChange: handleUserIdChange,\n            placeholder: \"Enter User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 md:w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-[degularsemibold] text-xl\",\n            children: \"Select Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:border-blue-500\",\n            children: /*#__PURE__*/_jsxDEV(FileBase64, {\n              multiple: false,\n              onDone: handleVideoUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          className: \"w-full bg-blue-500 text-white p-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-500\",\n          children: \"Upload Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetDetails,\n          className: \"w-full bg-green-500 text-white p-2 rounded-md mt-4 hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-500\",\n          children: \"Get Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full border-t mt-4 border-gray-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), uploadResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Upload Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-100 overflow-auto p-4 text-sm rounded-md\",\n        children: JSON.stringify(uploadResponse, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), detailsResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Full Video Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-100 overflow-auto p-4 text-sm rounded-md\",\n        children: JSON.stringify(detailsResponse, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Uploaded Video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        controls: true,\n        width: \"100%\",\n        height: \"auto\",\n        children: \"Your browser does not support the video tag.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"G/FbLErM10itJwZ3E8FTZeGBNqg=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useRef","axios","toast","ToastContainer","FileBase64","jsxDEV","_jsxDEV","Transactions","_s","userId","setUserId","videoData","setVideoData","uploadResponse","setUploadResponse","detailsResponse","setDetailsResponse","loading","setLoading","videoRef","handleUserIdChange","event","target","value","getItemIdFromPresignedUrl","presignedUrl","url","URL","path","pathname","pathParts","split","fileName","length","itemId","replace","error","console","handleVideoUpload","file","handleUpload","presignedUrlEndpoint","presignedUrlResponse","post","log","data","put","headers","item_id","message","success","response","handleGetDetails","expectedAttributes","startTime","performance","now","detailsEndpoint","get","endTime","isResponseComplete","every","attr","timeTaken","current","videoUrl","videoS3Url","src","load","play","filter","className","children","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","multiple","onDone","onClick","JSON","stringify","ref","controls","width","height","_c","$RefreshReg$"],"sources":["/Users/echelon/Documents/GitHub/tezda/tezda-video-process-upload/src/components/Transactions.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FileBase64 from \"react-file-base64\";\n\nconst Transactions = () => {\n  const [userId, setUserId] = useState<string>(\"\");\n  const [videoData, setVideoData] = useState<File | null>(null);\n  const [uploadResponse, setUploadResponse] = useState<any | null>(null);\n  const [detailsResponse, setDetailsResponse] = useState<any | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserId(event.target.value);\n  };\n\n  const getItemIdFromPresignedUrl = (presignedUrl: string) => {\n    try {\n      const url = new URL(presignedUrl);\n      const path = url.pathname;\n      const pathParts = path.split('/');\n      const fileName = pathParts[pathParts.length - 1];\n      // Remove the file extension, assuming it's always \".mp4\"\n      const itemId = fileName.replace(/\\.mp4$/, '');\n      return itemId;\n    } catch (error) {\n      console.error('Error extracting item ID from presigned URL:', error);\n      return null;\n    }\n  };\n\n  const handleVideoUpload = (file: { file: File }) => {\n    setVideoData(file.file);\n  };\n\n  const handleUpload = async () => {\n    if (!userId || !videoData) {\n      toast.error(\"Please enter user ID and select a video\");\n      return;\n    }\n\n    const presignedUrlEndpoint = `https://kl8no40qhb.execute-api.eu-west-2.amazonaws.com/test/user/createUserUploadPresignedUrl?user_id=${userId}`;\n\n    try {\n      setLoading(true);\n\n      // Step 1: Request a presigned URL\n      const presignedUrlResponse = await axios.post(presignedUrlEndpoint);\n      console.log(\"Response from presigned URL request:\", presignedUrlResponse);\n      const presignedUrl = presignedUrlResponse.data.data;\n\n      // Step 2: Upload the video to S3 using the presigned URL\n      console.log(\"Uploading video data:\", videoData);\n      await axios.put(presignedUrl, videoData, {\n        headers: {\n          \"Content-Type\": \"video/mp4\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      });\n\n      const item_id = getItemIdFromPresignedUrl(presignedUrl);\n\n      // Step 3: After a successful upload, you can now trigger other actions or display a success message.\n      setUploadResponse({ message: \"Video uploaded successfully\", data: { presignedUrl, item_id } });\n      toast.success(\"Video uploaded successfully!\");\n    } catch (error: any) {\n      console.error(\"Error during upload:\", error);\n\n      if (error.response) {\n        toast.error(`Error during upload: ${error.response.data.message}`);\n      } else {\n        toast.error(\"Unexpected error uploading video. Please try again later.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGetDetails = async () => {\n    if (!uploadResponse) {\n      toast.error(\"Please upload a video first\");\n      return;\n    }\n  \n    const expectedAttributes = [\n      \"item_id\",\n      \"parentLabels\",\n      \"creation_timestamp\",\n      \"genre\",\n      \"video_duration\",\n      \"adaptiveBitrateS3Url\",\n      \"adaptiveBitrateS3Url720p\",\n      \"childLabels\",\n      \"adaptiveBitrateS3Url360p\",\n      \"videoS3Url\",\n      \"adaptiveBitrateS3Url540p\",\n      \"compressedVideoS3Url\",\n    ];\n  \n    try {\n      setLoading(true);\n  \n      // Measure start time\n      const startTime = performance.now();\n  \n      // Hit the details endpoint once\n      const detailsEndpoint = `https://kl8no40qhb.execute-api.eu-west-2.amazonaws.com/dev/user/findUserShortVideo?item_id=${uploadResponse.data.item_id}`;\n      const detailsResponse = await axios.get(detailsEndpoint);\n      setDetailsResponse(detailsResponse.data);\n  \n      // Measure end time\n      const endTime = performance.now();\n  \n      // Check completeness of the response\n      const isResponseComplete = expectedAttributes.every(attr => attr in detailsResponse.data.data);\n  \n      if (isResponseComplete) {\n        // Calculate and log the time taken\n        const timeTaken = endTime - startTime;\n        console.log(`Time taken to receive complete response: ${timeTaken} milliseconds`);\n  \n        // Auto-load the uploaded video into the video player\n        if (videoRef.current) {\n          // Assuming the video URL is correctly returned from the API\n          const videoUrl = detailsResponse.data.data.videoS3Url;\n          videoRef.current.src = videoUrl;\n          videoRef.current.load();\n          videoRef.current.play(); // Auto-play the video if needed\n        }\n      } else {\n        console.log(\"Incomplete response. Missing attributes:\", expectedAttributes.filter(attr => !(attr in detailsResponse.data.data)));\n        toast.error(\"Incomplete response. Give it some time.\");\n      }\n    } catch (error) {\n      console.error(\"Error getting video details:\", error);\n      toast.error(\"Error getting video details. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n\n\n  return (\n    <div className='flex flex-col md:pt-15 pt-5'>\n      <div className='flex flex-col md:flex-row justify-between gap-4'>\n        <div className='text-neutral-900 flex flex-col gap-4 md:flex'>\n          <div>\n            <p className='font-[degularbold] md:text-2xl text-xl'>Upload Video Logic</p>\n            <p className='font-[degularmedium] text-gray-600'>\n              Your video is uploaded when you select a video and click upload video. After it is done uploading a button appears allowing you to get a\n              video details.\n              <br />\n              This video details is the result of the background Lambda functions that are triggered when a video is uploaded. It gives the video\n              labels based on the uploaded video (AWS rekognition and redshift) and the adaptive bitrates of the video (FFMPEG)\n            </p>\n          </div>\n          <div>\n            <input\n              className='bg-gray-100 text-neutral-900 p-4 items-center flex gap-2 rounded-full font-[degularsemibold] h-12'\n              onChange={handleUserIdChange}\n              placeholder='Enter User ID'\n            />\n          </div>\n        </div>\n        <div className='flex flex-col gap-2 md:w-1/2'>\n          <div className='mt-4'>\n            <p className='font-[degularsemibold] text-xl'>Select Video</p>\n            <div className='w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:border-blue-500'>\n              <FileBase64 multiple={false} onDone={handleVideoUpload} />\n            </div>\n          </div>\n          <button\n            onClick={handleUpload}\n            className='w-full bg-blue-500 text-white p-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-500'\n          >\n            Upload Video\n          </button>\n          <button\n            onClick={handleGetDetails}\n            className='w-full bg-green-500 text-white p-2 rounded-md mt-4 hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-500'\n          >\n            Get Details\n          </button>\n        </div>\n      </div>\n      <div className='w-full border-t mt-4 border-gray-300' />\n\n      {loading && (\n        <div className='mt-4 flex justify-center'>\n          <p className='text-lg font-bold mb-2'>Loading...</p>\n        </div>\n      )}\n\n      {uploadResponse && (\n        <div className='mt-4 '>\n          <h2 className='text-lg font-bold mb-2'>Upload Response:</h2>\n          <div>{/* Add any additional elements or styling here if needed */}</div>\n          <pre className='bg-gray-100 overflow-auto p-4 text-sm rounded-md'>{JSON.stringify(uploadResponse, null, 2)}</pre>\n        </div>\n      )}\n\n      {detailsResponse && (\n        <div className='mt-4 '>\n          <h2 className='text-lg font-bold mb-2'>Full Video Details:</h2>\n          <div>{/* Add any additional elements or styling here if needed */}</div>\n          <pre className='bg-gray-100 overflow-auto p-4 text-sm rounded-md'>{JSON.stringify(detailsResponse, null, 2)}</pre>\n        </div>\n      )}\n\n      {/* Video player section */}\n      <div className='mt-4'>\n        <h2 className='text-lg font-bold mb-2'>Uploaded Video:</h2>\n        <video ref={videoRef} controls width='100%' height='auto'>\n          Your browser does not support the video tag.\n        </video>\n      </div>\n\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAOC,UAAU,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EAC7D,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAa,IAAI,CAAC;EACtE,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAa,IAAI,CAAC;EACxE,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMoB,QAAQ,GAAGnB,MAAM,CAAmB,IAAI,CAAC;EAE/C,MAAMoB,kBAAkB,GAAIC,KAA0C,IAAK;IACzEX,SAAS,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,yBAAyB,GAAIC,YAAoB,IAAK;IAC1D,IAAI;MACF,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACF,YAAY,CAAC;MACjC,MAAMG,IAAI,GAAGF,GAAG,CAACG,QAAQ;MACzB,MAAMC,SAAS,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;MACjC,MAAMC,QAAQ,GAAGF,SAAS,CAACA,SAAS,CAACG,MAAM,GAAG,CAAC,CAAC;MAChD;MACA,MAAMC,MAAM,GAAGF,QAAQ,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;MAC7C,OAAOD,MAAM;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,IAAoB,IAAK;IAClD3B,YAAY,CAAC2B,IAAI,CAACA,IAAI,CAAC;EACzB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC/B,MAAM,IAAI,CAACE,SAAS,EAAE;MACzBT,KAAK,CAACkC,KAAK,CAAC,yCAAyC,CAAC;MACtD;IACF;IAEA,MAAMK,oBAAoB,GAAI,yGAAwGhC,MAAO,EAAC;IAE9I,IAAI;MACFS,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMwB,oBAAoB,GAAG,MAAMzC,KAAK,CAAC0C,IAAI,CAACF,oBAAoB,CAAC;MACnEJ,OAAO,CAACO,GAAG,CAAC,sCAAsC,EAAEF,oBAAoB,CAAC;MACzE,MAAMjB,YAAY,GAAGiB,oBAAoB,CAACG,IAAI,CAACA,IAAI;;MAEnD;MACAR,OAAO,CAACO,GAAG,CAAC,uBAAuB,EAAEjC,SAAS,CAAC;MAC/C,MAAMV,KAAK,CAAC6C,GAAG,CAACrB,YAAY,EAAEd,SAAS,EAAE;QACvCoC,OAAO,EAAE;UACP,cAAc,EAAE,WAAW;UAC3B,6BAA6B,EAAE;QACjC;MACF,CAAC,CAAC;MAEF,MAAMC,OAAO,GAAGxB,yBAAyB,CAACC,YAAY,CAAC;;MAEvD;MACAX,iBAAiB,CAAC;QAAEmC,OAAO,EAAE,6BAA6B;QAAEJ,IAAI,EAAE;UAAEpB,YAAY;UAAEuB;QAAQ;MAAE,CAAC,CAAC;MAC9F9C,KAAK,CAACgD,OAAO,CAAC,8BAA8B,CAAC;IAC/C,CAAC,CAAC,OAAOd,KAAU,EAAE;MACnBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAE5C,IAAIA,KAAK,CAACe,QAAQ,EAAE;QAClBjD,KAAK,CAACkC,KAAK,CAAE,wBAAuBA,KAAK,CAACe,QAAQ,CAACN,IAAI,CAACI,OAAQ,EAAC,CAAC;MACpE,CAAC,MAAM;QACL/C,KAAK,CAACkC,KAAK,CAAC,2DAA2D,CAAC;MAC1E;IACF,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACvC,cAAc,EAAE;MACnBX,KAAK,CAACkC,KAAK,CAAC,6BAA6B,CAAC;MAC1C;IACF;IAEA,MAAMiB,kBAAkB,GAAG,CACzB,SAAS,EACT,cAAc,EACd,oBAAoB,EACpB,OAAO,EACP,gBAAgB,EAChB,sBAAsB,EACtB,0BAA0B,EAC1B,aAAa,EACb,0BAA0B,EAC1B,YAAY,EACZ,0BAA0B,EAC1B,sBAAsB,CACvB;IAED,IAAI;MACFnC,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMoC,SAAS,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;;MAEnC;MACA,MAAMC,eAAe,GAAI,8FAA6F5C,cAAc,CAACgC,IAAI,CAACG,OAAQ,EAAC;MACnJ,MAAMjC,eAAe,GAAG,MAAMd,KAAK,CAACyD,GAAG,CAACD,eAAe,CAAC;MACxDzC,kBAAkB,CAACD,eAAe,CAAC8B,IAAI,CAAC;;MAExC;MACA,MAAMc,OAAO,GAAGJ,WAAW,CAACC,GAAG,CAAC,CAAC;;MAEjC;MACA,MAAMI,kBAAkB,GAAGP,kBAAkB,CAACQ,KAAK,CAACC,IAAI,IAAIA,IAAI,IAAI/C,eAAe,CAAC8B,IAAI,CAACA,IAAI,CAAC;MAE9F,IAAIe,kBAAkB,EAAE;QACtB;QACA,MAAMG,SAAS,GAAGJ,OAAO,GAAGL,SAAS;QACrCjB,OAAO,CAACO,GAAG,CAAE,4CAA2CmB,SAAU,eAAc,CAAC;;QAEjF;QACA,IAAI5C,QAAQ,CAAC6C,OAAO,EAAE;UACpB;UACA,MAAMC,QAAQ,GAAGlD,eAAe,CAAC8B,IAAI,CAACA,IAAI,CAACqB,UAAU;UACrD/C,QAAQ,CAAC6C,OAAO,CAACG,GAAG,GAAGF,QAAQ;UAC/B9C,QAAQ,CAAC6C,OAAO,CAACI,IAAI,CAAC,CAAC;UACvBjD,QAAQ,CAAC6C,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B;MACF,CAAC,MAAM;QACLhC,OAAO,CAACO,GAAG,CAAC,0CAA0C,EAAES,kBAAkB,CAACiB,MAAM,CAACR,IAAI,IAAI,EAAEA,IAAI,IAAI/C,eAAe,CAAC8B,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;QAChI3C,KAAK,CAACkC,KAAK,CAAC,yCAAyC,CAAC;MACxD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDlC,KAAK,CAACkC,KAAK,CAAC,sDAAsD,CAAC;IACrE,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAID,oBACEZ,OAAA;IAAKiE,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1ClE,OAAA;MAAKiE,SAAS,EAAC,iDAAiD;MAAAC,QAAA,gBAC9DlE,OAAA;QAAKiE,SAAS,EAAC,8CAA8C;QAAAC,QAAA,gBAC3DlE,OAAA;UAAAkE,QAAA,gBACElE,OAAA;YAAGiE,SAAS,EAAC,wCAAwC;YAAAC,QAAA,EAAC;UAAkB;YAAAxC,QAAA,EAAAyC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC5ErE,OAAA;YAAGiE,SAAS,EAAC,oCAAoC;YAAAC,QAAA,GAAC,yJAGhD,eAAAlE,OAAA;cAAA0B,QAAA,EAAAyC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,yPAGR;UAAA;YAAA3C,QAAA,EAAAyC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAA3C,QAAA,EAAAyC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNrE,OAAA;UAAAkE,QAAA,eACElE,OAAA;YACEiE,SAAS,EAAC,mGAAmG;YAC7GK,QAAQ,EAAExD,kBAAmB;YAC7ByD,WAAW,EAAC;UAAe;YAAA7C,QAAA,EAAAyC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B;QAAC;UAAA3C,QAAA,EAAAyC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAA3C,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNrE,OAAA;QAAKiE,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3ClE,OAAA;UAAKiE,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBlE,OAAA;YAAGiE,SAAS,EAAC,gCAAgC;YAAAC,QAAA,EAAC;UAAY;YAAAxC,QAAA,EAAAyC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC9DrE,OAAA;YAAKiE,SAAS,EAAC,kGAAkG;YAAAC,QAAA,eAC/GlE,OAAA,CAACF,UAAU;cAAC0E,QAAQ,EAAE,KAAM;cAACC,MAAM,EAAEzC;YAAkB;cAAAN,QAAA,EAAAyC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAA3C,QAAA,EAAAyC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC;QAAA;UAAA3C,QAAA,EAAAyC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNrE,OAAA;UACE0E,OAAO,EAAExC,YAAa;UACtB+B,SAAS,EAAC,oHAAoH;UAAAC,QAAA,EAC/H;QAED;UAAAxC,QAAA,EAAAyC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrE,OAAA;UACE0E,OAAO,EAAE5B,gBAAiB;UAC1BmB,SAAS,EAAC,0HAA0H;UAAAC,QAAA,EACrI;QAED;UAAAxC,QAAA,EAAAyC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA3C,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAA3C,QAAA,EAAAyC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNrE,OAAA;MAAKiE,SAAS,EAAC;IAAsC;MAAAvC,QAAA,EAAAyC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEvD1D,OAAO,iBACNX,OAAA;MAAKiE,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvClE,OAAA;QAAGiE,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAU;QAAAxC,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAA3C,QAAA,EAAAyC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACN,EAEA9D,cAAc,iBACbP,OAAA;MAAKiE,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBlE,OAAA;QAAIiE,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAgB;QAAAxC,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5DrE,OAAA;QAAA0B,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuE,CAAC,eACxErE,OAAA;QAAKiE,SAAS,EAAC,kDAAkD;QAAAC,QAAA,EAAES,IAAI,CAACC,SAAS,CAACrE,cAAc,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAmB,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAA3C,QAAA,EAAAyC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9G,CACN,EAEA5D,eAAe,iBACdT,OAAA;MAAKiE,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBlE,OAAA;QAAIiE,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAmB;QAAAxC,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DrE,OAAA;QAAA0B,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuE,CAAC,eACxErE,OAAA;QAAKiE,SAAS,EAAC,kDAAkD;QAAAC,QAAA,EAAES,IAAI,CAACC,SAAS,CAACnE,eAAe,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAiB,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAA3C,QAAA,EAAAyC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/G,CACN,eAGDrE,OAAA;MAAKiE,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBlE,OAAA;QAAIiE,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAe;QAAAxC,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3DrE,OAAA;QAAO6E,GAAG,EAAEhE,QAAS;QAACiE,QAAQ;QAACC,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAAAd,QAAA,EAAC;MAE1D;QAAAxC,QAAA,EAAAyC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAA3C,QAAA,EAAAyC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENrE,OAAA,CAACH,cAAc;MAAA6B,QAAA,EAAAyC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAA3C,QAAA,EAAAyC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAACnE,EAAA,CA1NID,YAAY;AAAAgF,EAAA,GAAZhF,YAAY;AA4NlB,eAAeA,YAAY;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}